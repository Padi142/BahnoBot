// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/records": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "record"
                ],
                "summary": "gets all records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/substances": {
            "get": {
                "description": "Gets all substances that are by default accessible to user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "substance"
                ],
                "summary": "gets all substances from db",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/substances/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "substance"
                ],
                "summary": "get substance by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Gets the basic info about every user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Send new user struct to update user in db",
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "updates user with incoming json struct",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/users/discord_id/{discord_id}": {
            "get": {
                "description": "Gets the basic user info by their discord id",
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "gets user by their discord id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID of wanted user",
                        "name": "discord_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "description": "Gets the basic user info by their id",
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "gets user by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/users/{id}/records": {
            "get": {
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get all records of user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/users/{id}/records/last": {
            "get": {
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get last record of given user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
