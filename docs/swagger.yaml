info:
  contact: {}
paths:
  /api/records:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: gets all records
      tags:
      - record
  /api/substances:
    get:
      description: Gets all substances that are by default accessible to user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: gets all substances from db
      tags:
      - substance
  /api/substances/{id}:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: get substance by id
      tags:
      - substance
  /api/users:
    get:
      description: Gets the basic info about every user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all users
      tags:
      - user
    put:
      description: Send new user struct to update user in db
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: updates user with incoming json struct
      tags:
      - user
  /api/users/{id}:
    get:
      description: Gets the basic user info by their id
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: gets user by id
      tags:
      - user
  /api/users/{id}/records:
    get:
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: get all records of user
      tags:
      - user
  /api/users/{id}/records/last:
    get:
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: get last record of given user
      tags:
      - user
  /api/users/discord_id/{discord_id}:
    get:
      description: Gets the basic user info by their discord id
      parameters:
      - description: Discord ID of wanted user
        in: path
        name: discord_id
        required: true
        type: string
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: gets user by their discord id
      tags:
      - user
swagger: "2.0"
